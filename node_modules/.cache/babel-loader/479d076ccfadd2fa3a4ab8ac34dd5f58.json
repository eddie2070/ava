{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/myapp/src/App.js\";\nimport React, { useEffect, useReducer } from 'react';\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport PubSub from '@aws-amplify/pubsub';\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\nimport { createTodo } from './graphql/mutations';\nimport { listTodos } from './graphql/queries';\nimport { onCreateTodo } from './graphql/subscriptions';\nimport awsconfig from './aws-exports';\nimport './App.css';\nAPI.configure(awsconfig);\nPubSub.configure(awsconfig); // Action Types\n\nconst QUERY = 'QUERY';\nconst SUBSCRIPTION = 'SUBSCRIPTION';\nconst initialState = {\n  todos: []\n};\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\nconst Section = cxs(\"div\")({\n  marginBottom: \"50px\",\n  fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif'\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case QUERY:\n      return { ...state,\n        todos: action.todos\n      };\n\n    case SUBSCRIPTION:\n      return { ...state,\n        todos: [...state.todos, action.todo]\n      };\n\n    default:\n      return state;\n  }\n};\n\nasync function createNewTodo() {\n  const todo = {\n    name: \"Use AWS AppSync\",\n    description: \"RealTime and Offline\"\n  };\n  await API.graphql(graphqlOperation(createTodo, {\n    input: todo\n  }));\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    async function getData() {\n      const todoData = await API.graphql(graphqlOperation(listTodos));\n      dispatch({\n        type: QUERY,\n        todos: todoData.data.listTodos.items\n      });\n    }\n\n    getData();\n    const subscription = API.graphql(graphqlOperation(onCreateTodo)).subscribe({\n      next: eventData => {\n        const todo = eventData.value.data.onCreateTodo;\n        dispatch({\n          type: SUBSCRIPTION,\n          todo\n        });\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \". \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \". \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \". \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \". \"), React.createElement(\"div\", {\n    className: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TextLoop, {\n    children: [\"Trade faster\", \"Increase sales\", \"Stock winners\", \"Price perfectly\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \";\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ec2-user/environment/myapp/src/App.js"],"names":["React","useEffect","useReducer","API","graphqlOperation","PubSub","TextLoop","cxs","createTodo","listTodos","onCreateTodo","awsconfig","configure","QUERY","SUBSCRIPTION","initialState","todos","StyledTextLoop","display","Section","marginBottom","fontFamily","reducer","state","action","type","todo","createNewTodo","name","description","graphql","input","App","dispatch","getData","todoData","data","items","subscription","subscribe","next","eventData","value","unsubscribe","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from 'react';\n\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport PubSub from '@aws-amplify/pubsub';\n\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\n\nimport { createTodo } from './graphql/mutations';\nimport { listTodos } from './graphql/queries';\nimport { onCreateTodo } from './graphql/subscriptions';\n\nimport awsconfig from './aws-exports';\nimport './App.css';\n\nAPI.configure(awsconfig);\nPubSub.configure(awsconfig);\n\n// Action Types\nconst QUERY = 'QUERY';\nconst SUBSCRIPTION = 'SUBSCRIPTION';\n\nconst initialState = {\n  todos: [],\n};\n\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\nconst Section = cxs(\"div\")({\n  marginBottom: \"50px\",\n  fontFamily:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif'\n});\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case QUERY:\n      return {...state, todos: action.todos};\n    case SUBSCRIPTION:\n      return {...state, todos:[...state.todos, action.todo]}\n    default:\n      return state;\n  }\n};\n\nasync function createNewTodo() {\n  const todo = { name: \"Use AWS AppSync\", description: \"RealTime and Offline\" };\n  await API.graphql(graphqlOperation(createTodo, { input: todo }));\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    async function getData() {\n      const todoData = await API.graphql(graphqlOperation(listTodos));\n      dispatch({ type: QUERY, todos: todoData.data.listTodos.items });\n    }\n    getData();\n\n    const subscription = API.graphql(graphqlOperation(onCreateTodo)).subscribe({\n      next: (eventData) => {\n        const todo = eventData.value.data.onCreateTodo;\n        dispatch({ type: SUBSCRIPTION, todo });\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"App\"style = {{height:\"100vh\"}} >\n      {/*<button onClick={createNewTodo}>Add Todo</button>*/}\n      <p>. </p>\n      <p>. </p>\n      <p>. </p>\n      <p>. </p>\n      <div className=\"Message\">\n      <TextLoop children={[\"Trade faster\", \"Increase sales\", \"Stock winners\", \"Price perfectly\"]} />;\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}