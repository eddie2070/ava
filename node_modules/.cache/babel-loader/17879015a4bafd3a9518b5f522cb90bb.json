{"ast":null,"code":"// Copied from https://github.com/department-stockholm/aws-signature-v4\n// and fixed the sorting of query parameters by using 'query-string' package instead of 'querystring'\n'use strict';\n\nvar crypto = require('crypto');\n\nvar querystring = require('query-string');\n\nexports.createCanonicalRequest = function (method, pathname, query, headers, payload) {\n  return [method.toUpperCase(), pathname, exports.createCanonicalQueryString(query), exports.createCanonicalHeaders(headers), exports.createSignedHeaders(headers), payload].join('\\n');\n};\n\nexports.createCanonicalQueryString = function (params) {\n  return Object.keys(params).sort().map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n  }).join('&');\n};\n\nexports.createCanonicalHeaders = function (headers) {\n  return Object.keys(headers).sort().map(function (name) {\n    return name.toLowerCase().trim() + ':' + headers[name].toString().trim() + '\\n';\n  }).join('');\n};\n\nexports.createSignedHeaders = function (headers) {\n  return Object.keys(headers).sort().map(function (name) {\n    return name.toLowerCase().trim();\n  }).join(';');\n};\n\nexports.createCredentialScope = function (time, region, service) {\n  return [toDate(time), region, service, 'aws4_request'].join('/');\n};\n\nexports.createStringToSign = function (time, region, service, request) {\n  return ['AWS4-HMAC-SHA256', toTime(time), exports.createCredentialScope(time, region, service), hash(request, 'hex')].join('\\n');\n};\n\nexports.createSignature = function (secret, time, region, service, stringToSign) {\n  var h1 = hmac('AWS4' + secret, toDate(time)); // date-key\n\n  var h2 = hmac(h1, region); // region-key\n\n  var h3 = hmac(h2, service); // service-key\n\n  var h4 = hmac(h3, 'aws4_request'); // signing-key\n\n  return hmac(h4, stringToSign, 'hex');\n};\n\nexports.createPresignedS3URL = function (name, options) {\n  options = options || {};\n  options.method = options.method || 'GET';\n  options.bucket = options.bucket || process.env.AWS_S3_BUCKET;\n  return exports.createPresignedURL(options.method, options.bucket + '.s3.amazonaws.com', '/' + name, 's3', 'UNSIGNED-PAYLOAD', options);\n};\n\nexports.createPresignedURL = function (method, host, path, service, payload, options) {\n  options = options || {}; //options.key = options.key || process.env.AWS_ACCESS_KEY_ID;\n  //options.secret = options.secret || process.env.AWS_SECRET_ACCESS_KEY;\n\n  options.key = \"AKIA263JUYZWMC6DA2DV\";\n  options.secret = \"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\";\n  options.protocol = options.protocol || 'https';\n  options.headers = options.headers || {};\n  options.timestamp = options.timestamp || Date.now();\n  options.region = options.region || process.env.AWS_REGION || 'us-east-1';\n  options.expires = options.expires || 86400; // 24 hours\n\n  options.headers = options.headers || {}; // host is required\n\n  options.headers.Host = host;\n  var query = options.query ? querystring.parse(options.query) : {};\n  query['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n  query['X-Amz-Credential'] = options.key + '/' + exports.createCredentialScope(options.timestamp, options.region, service);\n  query['X-Amz-Date'] = toTime(options.timestamp);\n  query['X-Amz-Expires'] = options.expires;\n  query['X-Amz-SignedHeaders'] = exports.createSignedHeaders(options.headers);\n\n  if (options.sessionToken) {\n    query['X-Amz-Security-Token'] = options.sessionToken;\n  }\n\n  var canonicalRequest = exports.createCanonicalRequest(method, path, query, options.headers, payload);\n  var stringToSign = exports.createStringToSign(options.timestamp, options.region, service, canonicalRequest);\n  var signature = exports.createSignature(options.secret, options.timestamp, options.region, service, stringToSign);\n  query['X-Amz-Signature'] = signature;\n  return options.protocol + '://' + host + path + '?' + querystring.stringify(query);\n};\n\nfunction toTime(time) {\n  return new Date(time).toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n}\n\nfunction toDate(time) {\n  return toTime(time).substring(0, 8);\n}\n\nfunction hmac(key, string, encoding) {\n  return crypto.createHmac('sha256', key).update(string, 'utf8').digest(encoding);\n}\n\nfunction hash(string, encoding) {\n  return crypto.createHash('sha256').update(string, 'utf8').digest(encoding);\n}","map":{"version":3,"sources":["/home/ec2-user/environment/myapp/src/lib/aws-signature-v4.js"],"names":["crypto","require","querystring","exports","createCanonicalRequest","method","pathname","query","headers","payload","toUpperCase","createCanonicalQueryString","createCanonicalHeaders","createSignedHeaders","join","params","Object","keys","sort","map","key","encodeURIComponent","name","toLowerCase","trim","toString","createCredentialScope","time","region","service","toDate","createStringToSign","request","toTime","hash","createSignature","secret","stringToSign","h1","hmac","h2","h3","h4","createPresignedS3URL","options","bucket","process","env","AWS_S3_BUCKET","createPresignedURL","host","path","protocol","timestamp","Date","now","AWS_REGION","expires","Host","parse","sessionToken","canonicalRequest","signature","stringify","toISOString","replace","substring","string","encoding","createHmac","update","digest","createHash"],"mappings":"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","sourcesContent":["// Copied from https://github.com/department-stockholm/aws-signature-v4\n// and fixed the sorting of query parameters by using 'query-string' package instead of 'querystring'\n'use strict';\n\nvar crypto = require('crypto');\nvar querystring = require('query-string');\n\nexports.createCanonicalRequest = function(method, pathname, query, headers, payload) {\n  return [\n    method.toUpperCase(),\n    pathname,\n    exports.createCanonicalQueryString(query),\n    exports.createCanonicalHeaders(headers),\n    exports.createSignedHeaders(headers),\n    payload\n  ].join('\\n');\n};\n\nexports.createCanonicalQueryString = function(params) {\n  return Object.keys(params).sort().map(function(key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n  }).join('&');\n};\n\nexports.createCanonicalHeaders = function(headers) {\n  return Object.keys(headers).sort().map(function(name) {\n    return name.toLowerCase().trim() + ':' + headers[name].toString().trim() + '\\n';\n  }).join('');\n};\n\nexports.createSignedHeaders = function(headers) {\n  return Object.keys(headers).sort().map(function(name) {\n    return name.toLowerCase().trim();\n  }).join(';');\n};\n\nexports.createCredentialScope = function(time, region, service) {\n  return [toDate(time), region, service, 'aws4_request'].join('/');\n};\n\nexports.createStringToSign = function(time, region, service, request) {\n  return [\n    'AWS4-HMAC-SHA256',\n    toTime(time),\n    exports.createCredentialScope(time, region, service),\n    hash(request, 'hex')\n  ].join('\\n');\n};\n\nexports.createSignature = function(secret, time, region, service, stringToSign) {\n  var h1 = hmac('AWS4' + secret, toDate(time)); // date-key\n  var h2 = hmac(h1, region); // region-key\n  var h3 = hmac(h2, service); // service-key\n  var h4 = hmac(h3, 'aws4_request'); // signing-key\n  return hmac(h4, stringToSign, 'hex');\n};\n\nexports.createPresignedS3URL = function(name, options) {\n  options = options || {};\n  options.method = options.method || 'GET';\n  options.bucket = options.bucket || process.env.AWS_S3_BUCKET;\n  return exports.createPresignedURL(\n    options.method,\n    options.bucket + '.s3.amazonaws.com',\n    '/' + name,\n    's3',\n    'UNSIGNED-PAYLOAD',\n    options\n  );\n};\n\nexports.createPresignedURL = function(method, host, path, service, payload, options) {\n  options = options || {};\n  //options.key = options.key || process.env.AWS_ACCESS_KEY_ID;\n  //options.secret = options.secret || process.env.AWS_SECRET_ACCESS_KEY;\n  options.key =  \"AKIA263JUYZWMC6DA2DV\";\n  options.secret = \"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\";\n  options.protocol = options.protocol || 'https';\n  options.headers = options.headers || {};\n  options.timestamp = options.timestamp || Date.now();\n  options.region = options.region || process.env.AWS_REGION || 'us-east-1';\n  options.expires = options.expires || 86400; // 24 hours\n  options.headers = options.headers || {};\n\n  // host is required\n  options.headers.Host = host;\n\n  var query = options.query ? querystring.parse(options.query) : {};\n  query['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n  query['X-Amz-Credential'] = options.key + '/' + exports.createCredentialScope(options.timestamp, options.region, service);\n  query['X-Amz-Date'] = toTime(options.timestamp);\n  query['X-Amz-Expires'] = options.expires;\n  query['X-Amz-SignedHeaders'] = exports.createSignedHeaders(options.headers);\n  if (options.sessionToken) {\n    query['X-Amz-Security-Token'] = options.sessionToken;\n  }\n\n  var canonicalRequest = exports.createCanonicalRequest(method, path, query, options.headers, payload);\n  var stringToSign = exports.createStringToSign(options.timestamp, options.region, service, canonicalRequest);\n  var signature = exports.createSignature(options.secret, options.timestamp, options.region, service, stringToSign);\n  query['X-Amz-Signature'] = signature;\n  return options.protocol + '://' + host + path + '?' + querystring.stringify(query);\n};\n\nfunction toTime(time) {\n  return new Date(time).toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n}\n\nfunction toDate(time) {\n  return toTime(time).substring(0, 8);\n}\n\nfunction hmac(key, string, encoding) {\n  return crypto.createHmac('sha256', key)\n    .update(string, 'utf8')\n    .digest(encoding);\n}\n\nfunction hash(string, encoding) {\n  return crypto.createHash('sha256')\n    .update(string, 'utf8')\n    .digest(encoding);\n}\n"]},"metadata":{},"sourceType":"module"}