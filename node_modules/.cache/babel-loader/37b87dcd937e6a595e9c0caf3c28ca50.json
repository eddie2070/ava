{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/myapp/src/App.js\";\nimport React, { useEffect, useReducer } from 'react';\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Amplify, { PubSub } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\nimport AWS_logo from \"./images/AWS_logo_RGB_WHT.png\";\nimport awsconfig from './aws-exports';\nimport './App.css'; // IoT subscription\n\nAmplify.configure({\n  Auth: {\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID\n  }\n});\nAmplify.addPluggable(new AWSIoTProvider({\n  aws_pubsub_region: process.env.REACT_APP_REGION,\n  aws_pubsub_endpoint: `wss://${process.env.REACT_APP_MQTT_ID}.iot.${process.env.REACT_APP_REGION}.amazonaws.com/mqtt`\n}));\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\n\nclass LCD extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      datalcd: null,\n      status: 'idle'\n    };\n\n    this.getSub = () => {\n      const datalcd = Amplify.PubSub.subscribe('lcd-message').subscribe({\n        next: data => {\n          var answer = JSON.stringify(data);\n          var objectValue = JSON.parse(answer);\n          var messageiot = objectValue['value'].message;\n          console.log('tip: ', messageiot);\n          this.setState({\n            datalcd: messageiot,\n            status: 'presence'\n          });\n        },\n        error: error => console.error(error),\n        close: () => console.log('Done')\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getSub();\n  }\n\n  render() {\n    const {\n      datalcd,\n      status\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: \"100vh\",\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TextLoop, {\n      interval: \"4000\",\n      fade: \"true\",\n      children: [\"How can I help?\", \"\t¿Cómo puedo ayudarte?\", React.createElement(\"img\", {\n        src: AWS_logo,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), this.data, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, `Good Morning ${datalcd}. ${status}`));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      height: \"100vh\",\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TextLoop, {\n    interval: \"4000\",\n    fade: \"true\",\n    children: [\"How can I help?\", \"\t¿Cómo puedo ayudarte?\", React.createElement(\"img\", {\n      src: AWS_logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), this.data);\n}\n\nexport default LCD;","map":{"version":3,"sources":["/home/ec2-user/environment/myapp/src/App.js"],"names":["React","useEffect","useReducer","API","graphqlOperation","Amplify","PubSub","AWSIoTProvider","TextLoop","cxs","AWS_logo","awsconfig","configure","Auth","identityPoolId","process","env","REACT_APP_IDENTITY_POOL_ID","region","REACT_APP_REGION","userPoolId","REACT_APP_USER_POOL_ID","userPoolWebClientId","REACT_APP_USER_POOL_WEB_CLIENT_ID","addPluggable","aws_pubsub_region","aws_pubsub_endpoint","REACT_APP_MQTT_ID","StyledTextLoop","display","LCD","Component","state","datalcd","status","getSub","subscribe","next","data","answer","JSON","stringify","objectValue","parse","messageiot","message","console","log","setState","error","close","componentDidMount","render","height","justifyContent","App"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from 'react';\n\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Amplify, { PubSub } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\n\n\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\n\n\nimport AWS_logo from \"./images/AWS_logo_RGB_WHT.png\"\n\nimport awsconfig from './aws-exports';\nimport './App.css';\n\n// IoT subscription\n\nAmplify.configure({\n  Auth: {\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID\n  }\n});\n\nAmplify.addPluggable(new AWSIoTProvider({\n  aws_pubsub_region: process.env.REACT_APP_REGION,\n  aws_pubsub_endpoint: `wss://${process.env.REACT_APP_MQTT_ID}.iot.${process.env.REACT_APP_REGION}.amazonaws.com/mqtt`,\n}));\n\n\n\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\n\n\n\n\nclass LCD extends React.Component {\n  state = {\n    datalcd: null,\n    status: 'idle'\n  }\n  \n  componentDidMount() {\n    this.getSub()\n  }\n    getSub = () => {\n   const datalcd = Amplify.PubSub.subscribe('lcd-message').subscribe({\n  next: data => {\n    var answer = JSON.stringify(data);\n    var objectValue = JSON.parse(answer);\n    var messageiot = objectValue['value'].message;\n    console.log('tip: ', messageiot);\n    this.setState({datalcd: messageiot, status: 'presence'});\n  },\n  error: error => console.error(error),\n  close: () => console.log('Done'),\n});\n  }\n  render(){\n    const {datalcd, status} = this.state;\n    return (\n      <div className=\"App\"style = {{height:\"100vh\", justifyContent: 'center'}}>\n      {/*<button onClick={createNewTodo}>Add Todo</button>*/}\n\n      <div className=\"Message\">\n      \n      <TextLoop interval='4000' fade='true' children={[\"How can I help?\", \"\t¿Cómo puedo ayudarte?\",<img src={AWS_logo} alt=\"Logo\" />]} />\n       </div>\n       {this.data}\n    \n        <h2>{`Good Morning ${datalcd}. ${status}`}</h2>\n      </div>\n    );\n  }\n}\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\"style = {{height:\"100vh\", justifyContent: 'center'}}>\n      {/*<button onClick={createNewTodo}>Add Todo</button>*/}\n\n      <div className=\"Message\">\n      <TextLoop interval='4000' fade='true' children={[\"How can I help?\", \"\t¿Cómo puedo ayudarte?\",<img src={AWS_logo} alt=\"Logo\" />]} />\n       </div>\n       {this.data}\n    </div>\n  );\n}\n\nexport default LCD;\n\n\n"]},"metadata":{},"sourceType":"module"}