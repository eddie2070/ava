{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/myapp/src/App.js\";\nimport React, { useEffect, useReducer, useState } from 'react';\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Amplify, { PubSub, Predictions } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\nimport { AmazonAIPredictionsProvider } from '@aws-amplify/predictions';\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\nimport mic from 'microphone-stream';\nimport AWS_logo from \"./images/AWS_logo_RGB_WHT.png\"; // Spinner lib\n\nimport { css } from \"@emotion/core\"; // First way to import\n\nimport { ClipLoader } from \"react-spinners\";\nimport awsconfig from './aws-exports';\nimport './App.css'; // IoT subscription\n\nAmplify.configure({\n  Auth: {\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID\n  },\n  predictions: {\n    convert: {\n      transcription: {\n        region: \"us-east-1\",\n        proxy: false,\n        defaults: {\n          \"language\": \"en-US\"\n        }\n      }\n    }\n  }\n});\nAmplify.addPluggable(new AWSIoTProvider({\n  aws_pubsub_region: process.env.REACT_APP_REGION,\n  aws_pubsub_endpoint: `wss://${process.env.REACT_APP_MQTT_ID}.iot.${process.env.REACT_APP_REGION}.amazonaws.com/mqtt`\n}));\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction SpeechToText(props) {\n  const [response, setResponse] = useState(\"Question from attendee will be displayed here.\");\n\n  function AudioRecorder(props) {\n    const [recording, setRecording] = useState(false);\n    const [micStream, setMicStream] = useState();\n    const [audioBuffer] = useState(function () {\n      let buffer = [];\n\n      function add(raw) {\n        buffer = buffer.concat(...raw);\n        return buffer;\n      }\n\n      function newBuffer() {\n        console.log(\"reseting buffer\");\n        buffer = [];\n      }\n\n      return {\n        reset: function () {\n          newBuffer();\n        },\n        addData: function (raw) {\n          return add(raw);\n        },\n        getData: function () {\n          return buffer;\n        }\n      };\n    }());\n\n    async function startRecording() {\n      console.log('start recording');\n      audioBuffer.reset();\n      window.navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: true\n      }).then(stream => {\n        const startMic = new mic();\n        startMic.setStream(stream);\n        startMic.on('data', chunk => {\n          var raw = mic.toRaw(chunk);\n\n          if (raw == null) {\n            return;\n          }\n\n          audioBuffer.addData(raw);\n        });\n        setRecording(true);\n        setMicStream(startMic);\n      });\n    }\n\n    async function stopRecording() {\n      console.log('stop recording');\n      const {\n        finishRecording\n      } = props;\n      micStream.stop();\n      setMicStream(null);\n      setRecording(false);\n      const resultBuffer = audioBuffer.getData();\n\n      if (typeof finishRecording === \"function\") {\n        finishRecording(resultBuffer);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"audioRecorder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, recording && React.createElement(\"button\", {\n      onClick: stopRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Stop recording\"), !recording && React.createElement(\"button\", {\n      onClick: startRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Start recording\")));\n  }\n\n  function convertFromBuffer(bytes) {\n    setResponse('Converting text...');\n    Predictions.convert({\n      transcription: {\n        source: {\n          bytes\n        } // language: \"en-US\", // other options are \"en-GB\", \"fr-FR\", \"fr-CA\", \"es-US\"\n\n      }\n    }).then(({\n      transcription: {\n        fullText\n      }\n    }) => {\n      setResponse(fullText);\n      console.log(fullText);\n    }).catch(err => setResponse(JSON.stringify(err, null, 2)));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(AudioRecorder, {\n    finishRecording: convertFromBuffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, response)));\n}\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ScaleLoader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(ClipLoader, {\n      css: ScaleLoader,\n      size: 150 //size={\"150px\"} this also works\n      ,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass LCD extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      datalcd: null,\n      status: 'idle'\n    };\n\n    this.getSub = () => {\n      const datalcd = Amplify.PubSub.subscribe('lcd-message').subscribe({\n        next: data => {\n          var answer = JSON.stringify(data);\n          var objectValue = JSON.parse(answer);\n          var messageiot = objectValue['value'].message;\n          console.log('tip: ', messageiot);\n          this.setState({\n            datalcd: messageiot,\n            status: 'presence'\n          });\n        },\n        error: error => console.error(error),\n        close: () => console.log('Done')\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getSub();\n  }\n\n  render() {\n    const {\n      datalcd,\n      status\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: \"130vh\",\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(SpeechToText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, status == \"idle\" ? React.createElement(TextLoop, {\n      interval: \"4000\",\n      fade: \"true\",\n      children: [\"How can I help?\", \"\t¿Cómo puedo ayudarte?\", React.createElement(\"img\", {\n        src: AWS_logo,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }) : `AVA: ${datalcd}`), this.data);\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      height: \"100vh\",\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(TextLoop, {\n    interval: \"4000\",\n    fade: \"true\",\n    children: [\"How can I help?\", \"\t¿Cómo puedo ayudarte?\", React.createElement(\"img\", {\n      src: AWS_logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  })), this.data);\n}\n\nexport default AwesomeComponent;","map":{"version":3,"sources":["/home/ec2-user/environment/myapp/src/App.js"],"names":["React","useEffect","useReducer","useState","API","graphqlOperation","Amplify","PubSub","Predictions","AWSIoTProvider","AmazonAIPredictionsProvider","TextLoop","cxs","mic","AWS_logo","css","ClipLoader","awsconfig","configure","Auth","identityPoolId","process","env","REACT_APP_IDENTITY_POOL_ID","region","REACT_APP_REGION","userPoolId","REACT_APP_USER_POOL_ID","userPoolWebClientId","REACT_APP_USER_POOL_WEB_CLIENT_ID","predictions","convert","transcription","proxy","defaults","addPluggable","aws_pubsub_region","aws_pubsub_endpoint","REACT_APP_MQTT_ID","StyledTextLoop","display","override","SpeechToText","props","response","setResponse","AudioRecorder","recording","setRecording","micStream","setMicStream","audioBuffer","buffer","add","raw","concat","newBuffer","console","log","reset","addData","getData","startRecording","window","navigator","mediaDevices","getUserMedia","video","audio","then","stream","startMic","setStream","on","chunk","toRaw","stopRecording","finishRecording","stop","resultBuffer","convertFromBuffer","bytes","source","fullText","catch","err","JSON","stringify","AwesomeComponent","Component","constructor","state","loading","render","ScaleLoader","LCD","datalcd","status","getSub","subscribe","next","data","answer","objectValue","parse","messageiot","message","setState","error","close","componentDidMount","height","justifyContent","App"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\n\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Amplify, { PubSub, Predictions } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\nimport { AmazonAIPredictionsProvider } from '@aws-amplify/predictions';\n\n\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\n\nimport mic from 'microphone-stream';\n\nimport AWS_logo from \"./images/AWS_logo_RGB_WHT.png\"\n\n// Spinner lib\nimport { css } from \"@emotion/core\";\n// First way to import\nimport { ClipLoader } from \"react-spinners\";\n\n\nimport awsconfig from './aws-exports';\nimport './App.css';\n\n// IoT subscription\n\nAmplify.configure({\n  Auth: {\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID,\n  },\n  predictions: {\n        convert: {\n            transcription: {\n                region: \"us-east-1\",\n                proxy: false,\n                defaults: {\n                    \"language\": \"en-US\"\n                }\n            }\n        }\n    }\n});\n\nAmplify.addPluggable(new AWSIoTProvider({\n  aws_pubsub_region: process.env.REACT_APP_REGION,\n  aws_pubsub_endpoint: `wss://${process.env.REACT_APP_MQTT_ID}.iot.${process.env.REACT_APP_REGION}.amazonaws.com/mqtt`,\n}));\n\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\n\n\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction SpeechToText(props) {\n  const [response, setResponse] = useState(\"Question from attendee will be displayed here.\")\n  \n  function AudioRecorder(props) {\n    const [recording, setRecording] = useState(false);\n    const [micStream, setMicStream] = useState();\n    const [audioBuffer] = useState(\n      (function() {\n        let buffer = [];\n        function add(raw) {\n          buffer = buffer.concat(...raw);\n          return buffer;\n        }\n        function newBuffer() {\n          console.log(\"reseting buffer\");\n          buffer = [];\n        }\n \n        return {\n          reset: function() {\n            newBuffer();\n          },\n          addData: function(raw) {\n            return add(raw);\n          },\n          getData: function() {\n            return buffer;\n          }\n        };\n      })()\n    );\n\n    async function startRecording() {\n      console.log('start recording');\n      audioBuffer.reset();\n\n      window.navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then((stream) => {\n        const startMic = new mic();\n\n        startMic.setStream(stream);\n        startMic.on('data', (chunk) => {\n          var raw = mic.toRaw(chunk);\n          if (raw == null) {\n            return;\n          }\n          audioBuffer.addData(raw);\n\n        });\n\n        setRecording(true);\n        setMicStream(startMic);\n      });\n    }\n\n    async function stopRecording() {\n      console.log('stop recording');\n      const { finishRecording } = props;\n\n      micStream.stop();\n      setMicStream(null);\n      setRecording(false);\n\n      const resultBuffer = audioBuffer.getData();\n\n      if (typeof finishRecording === \"function\") {\n        finishRecording(resultBuffer);\n      }\n\n    }\n\n    return (\n      <div className=\"audioRecorder\">\n        <div>\n          {recording && <button onClick={stopRecording}>Stop recording</button>}\n          {!recording && <button onClick={startRecording}>Start recording</button>}\n        </div>\n      </div>\n    );\n  }\n\n  function convertFromBuffer(bytes) {\n    setResponse('Converting text...');\n    \n    Predictions.convert({\n      transcription: {\n        source: {\n          bytes\n        },\n        // language: \"en-US\", // other options are \"en-GB\", \"fr-FR\", \"fr-CA\", \"es-US\"\n      },\n    }).then(({ transcription: { fullText } }) => {\n        setResponse(fullText);\n        console.log(fullText);\n          })\n      .catch(err => setResponse(JSON.stringify(err, null, 2)));\n  }\n\n  return (\n    <div className=\"Text\">\n      <div>\n        <AudioRecorder finishRecording={convertFromBuffer} />\n        <p>{response}</p>\n      </div>\n    </div>\n  );\n}\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"ScaleLoader\">\n        <ClipLoader\n\n          css={ScaleLoader}\n          size={150}\n          //size={\"150px\"} this also works\n          color={\"#123abc\"}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n\nclass LCD extends React.Component {\n  state = {\n    datalcd: null,\n    status: 'idle'\n  }\n  \n  componentDidMount() {\n    this.getSub()\n  }\n    getSub = () => {\n   const datalcd = Amplify.PubSub.subscribe('lcd-message').subscribe({\n  next: data => {\n    var answer = JSON.stringify(data);\n    var objectValue = JSON.parse(answer);\n    var messageiot = objectValue['value'].message;\n    console.log('tip: ', messageiot);\n    this.setState({datalcd: messageiot, status: 'presence'});\n  },\n  error: error => console.error(error),\n  close: () => console.log('Done'),\n});\n  }\n  render(){\n    const {datalcd, status} = this.state;\n    return (\n      <div className=\"App\"style = {{height:\"130vh\", justifyContent: 'center'}}>\n      <SpeechToText />\n\n      <div className=\"Message\">\n      {status == \"idle\" ? <TextLoop interval='4000' fade='true' children={[\"How can I help?\", \"\t¿Cómo puedo ayudarte?\",<img src={AWS_logo} alt=\"Logo\" />]} /> : `AVA: ${datalcd}`}\n      \n       </div>\n       \n       {this.data}\n      </div>\n    );\n  }\n}\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\"style = {{height:\"100vh\", justifyContent: 'center'}}>\n      {/*<button onClick={createNewTodo}>Add Todo</button>*/}\n\n      <div className=\"Message\">\n      <TextLoop interval='4000' fade='true' children={[\"How can I help?\", \"\t¿Cómo puedo ayudarte?\",<img src={AWS_logo} alt=\"Logo\" />]} />\n       </div>\n       {this.data}\n    </div>\n  );\n}\n\nexport default AwesomeComponent;\n\n\n"]},"metadata":{},"sourceType":"module"}