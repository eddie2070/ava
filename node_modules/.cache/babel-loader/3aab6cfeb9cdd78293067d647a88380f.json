{"ast":null,"code":"import _regeneratorRuntime from\"/home/ec2-user/environment/myapp/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/home/ec2-user/environment/myapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/home/ec2-user/environment/myapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/home/ec2-user/environment/myapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/ec2-user/environment/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect,useReducer}from'react';import API,{graphqlOperation}from'@aws-amplify/api';import PubSub from'@aws-amplify/pubsub';import{createTodo}from'./graphql/mutations';import{listTodos}from'./graphql/queries';import{onCreateTodo}from'./graphql/subscriptions';import awsconfig from'./aws-exports';import'./App.css';API.configure(awsconfig);PubSub.configure(awsconfig);// Action Types\nvar QUERY='QUERY';var SUBSCRIPTION='SUBSCRIPTION';var initialState={todos:[]};var reducer=function reducer(state,action){switch(action.type){case QUERY:return _objectSpread({},state,{todos:action.todos});case SUBSCRIPTION:return _objectSpread({},state,{todos:[].concat(_toConsumableArray(state.todos),[action.todo])});default:return state;}};function createNewTodo(){return _createNewTodo.apply(this,arguments);}function _createNewTodo(){_createNewTodo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var todo;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:todo={name:\"Use AWS AppSync\",description:\"RealTime and Offline\"};_context2.next=3;return API.graphql(graphqlOperation(createTodo,{input:todo}));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _createNewTodo.apply(this,arguments);}function App(){var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){function getData(){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var todoData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return API.graphql(graphqlOperation(listTodos));case 2:todoData=_context.sent;dispatch({type:QUERY,todos:todoData.data.listTodos.items});case 4:case\"end\":return _context.stop();}}},_callee);}));return _getData.apply(this,arguments);}getData();var subscription=API.graphql(graphqlOperation(onCreateTodo)).subscribe({next:function next(eventData){var todo=eventData.value.data.onCreateTodo;dispatch({type:SUBSCRIPTION,todo:todo});}});return function(){return subscription.unsubscribe();};},[]);return React.createElement(\"div\",{className:\"App\"},React.createElement(\"button\",{onClick:createNewTodo},\"Add Todo\"),React.createElement(\"div\",null,state.todos.length>0?state.todos.map(function(todo){return React.createElement(\"p\",{key:todo.id},todo.name,\" : \",todo.description);}):React.createElement(\"p\",null,\"Add some todos!\")));}export default App;","map":{"version":3,"sources":["/home/ec2-user/environment/myapp/src/App.js"],"names":["React","useEffect","useReducer","API","graphqlOperation","PubSub","createTodo","listTodos","onCreateTodo","awsconfig","configure","QUERY","SUBSCRIPTION","initialState","todos","reducer","state","action","type","todo","createNewTodo","name","description","graphql","input","App","dispatch","getData","todoData","data","items","subscription","subscribe","next","eventData","value","unsubscribe","length","map","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from 'react';\n\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport PubSub from '@aws-amplify/pubsub';\n\nimport { createTodo } from './graphql/mutations';\nimport { listTodos } from './graphql/queries';\nimport { onCreateTodo } from './graphql/subscriptions';\n\nimport awsconfig from './aws-exports';\nimport './App.css';\n\nAPI.configure(awsconfig);\nPubSub.configure(awsconfig);\n\n// Action Types\nconst QUERY = 'QUERY';\nconst SUBSCRIPTION = 'SUBSCRIPTION';\n\nconst initialState = {\n  todos: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case QUERY:\n      return {...state, todos: action.todos};\n    case SUBSCRIPTION:\n      return {...state, todos:[...state.todos, action.todo]}\n    default:\n      return state;\n  }\n};\n\nasync function createNewTodo() {\n  const todo = { name: \"Use AWS AppSync\", description: \"RealTime and Offline\" };\n  await API.graphql(graphqlOperation(createTodo, { input: todo }));\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    async function getData() {\n      const todoData = await API.graphql(graphqlOperation(listTodos));\n      dispatch({ type: QUERY, todos: todoData.data.listTodos.items });\n    }\n    getData();\n\n    const subscription = API.graphql(graphqlOperation(onCreateTodo)).subscribe({\n      next: (eventData) => {\n        const todo = eventData.value.data.onCreateTodo;\n        dispatch({ type: SUBSCRIPTION, todo });\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <button onClick={createNewTodo}>Add Todo</button>\n      <div>\n        {state.todos.length > 0 ? \n          state.todos.map((todo) => <p key={todo.id}>{todo.name} : {todo.description}</p>) :\n          <p>Add some todos!</p> \n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}