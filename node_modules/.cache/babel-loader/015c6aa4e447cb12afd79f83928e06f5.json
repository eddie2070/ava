{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/myapp/src/App.js\";\nimport React, { useEffect, useReducer, useState } from 'react';\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Amplify, { PubSub, Predictions } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\nimport { AmazonAIPredictionsProvider } from '@aws-amplify/predictions';\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\nimport { Textfit } from 'react-textfit';\nimport OccamyText from 'react-occamy-text';\nimport Modal from 'react-awesome-modal';\nimport IframeComponent from './lib/IframeComponent';\nimport { Box, Grommet } from 'grommet';\nimport mic from 'microphone-stream';\nimport $ from 'jquery';\nimport streamAudioToWebSocket from \"./lib/main.js\";\nimport showError from \"./lib/main.js\";\nimport { startbutton } from \"./lib/main.js\";\nimport { resetbutton } from \"./lib/main.js\";\nimport AWS_logo from \"./images/AWS_logo_RGB_WHT.png\"; // Spinner lib\n\nimport { WaveSpinner } from \"react-spinners-kit\";\nimport awsconfig from './aws-exports';\nimport './App.css'; // IoT subscription\n\nAmplify.configure({\n  Auth: {\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID\n  },\n  predictions: {\n    convert: {\n      transcription: {\n        region: \"us-east-1\",\n        proxy: false,\n        defaults: {\n          \"language\": \"en-US\"\n        }\n      }\n    }\n  }\n});\nAmplify.addPluggable(new AWSIoTProvider({\n  aws_pubsub_region: process.env.REACT_APP_REGION,\n  aws_pubsub_endpoint: `wss://${process.env.REACT_APP_MQTT_ID}.iot.${process.env.REACT_APP_REGION}.amazonaws.com/mqtt`\n}));\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\n\nvar pubSubsensoff = async () => {\n  await Amplify.PubSub.publish('lcd-message', {\n    message: '',\n    presence: 0\n  });\n};\n\nvar sensoron = async () => {\n  await Amplify.PubSub.publish('lcd-message', {\n    message: '',\n    presence: 1\n  });\n};\n\nvar messagesession = async () => {\n  await Amplify.PubSub.publish('lcd-message', {\n    message: 'The session ML305 - How to become the leader in your DeepRacer league is located at the Aria - Pledingo323 room ',\n    presence: \"request\"\n  });\n};\n\nvar messagemap = async () => {\n  await Amplify.PubSub.publish('lcd-message', {\n    message: '',\n    presence: 1,\n    mapvue: 'true',\n    mapurl: 'www.google.com'\n  });\n};\n\nfunction SpeechToText(props) {\n  const [response, setResponse] = useState(\"Question from attendee will be displayed here.\");\n\n  function AudioRecorder(props) {\n    const [recording, setRecording] = useState(false);\n    const [micStream, setMicStream] = useState();\n    const [audioBuffer] = useState(function () {\n      let buffer = [];\n\n      function add(raw) {\n        buffer = buffer.concat(...raw);\n        return buffer;\n      }\n\n      function newBuffer() {\n        console.log(\"reseting buffer\");\n        buffer = [];\n      }\n\n      return {\n        reset: function () {\n          newBuffer();\n        },\n        addData: function (raw) {\n          return add(raw);\n        },\n        getData: function () {\n          return buffer;\n        }\n      };\n    }());\n\n    async function startRecording() {\n      console.log('start recording');\n      audioBuffer.reset();\n      window.navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: true\n      }).then(stream => {\n        const startMic = new mic();\n        startMic.setStream(stream);\n        startMic.on('data', chunk => {\n          var raw = mic.toRaw(chunk);\n\n          if (raw == null) {\n            return;\n          }\n\n          var audiobuf = audioBuffer.addData(raw);\n        });\n        setRecording(true);\n        setMicStream(startMic);\n      });\n    }\n\n    async function stopRecording() {\n      console.log('stop recording');\n      const {\n        finishRecording\n      } = props;\n      micStream.stop();\n      setMicStream(null);\n      setRecording(false);\n      const resultBuffer = audioBuffer.getData();\n\n      if (typeof finishRecording === \"function\") {\n        finishRecording(resultBuffer);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"audioRecorder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, recording && React.createElement(\"button\", {\n      onClick: stopRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Stop recording\"), !recording && React.createElement(\"button\", {\n      onClick: startRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Start recording\")));\n  }\n\n  function convertFromBuffer(bytes) {\n    setResponse('Converting text...');\n    Predictions.convert({\n      transcription: {\n        source: {\n          bytes\n        } // language: \"en-US\", // other options are \"en-GB\", \"fr-FR\", \"fr-CA\", \"es-US\"\n\n      }\n    }).then(({\n      transcription: {\n        fullText\n      }\n    }) => {\n      setResponse(fullText);\n      console.log(fullText);\n    }).catch(err => setResponse(JSON.stringify(err, null, 2)));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(AudioRecorder, {\n    finishRecording: convertFromBuffer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, response)));\n}\n\nclass LCD extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      datalcd: null,\n      status: 0,\n      startbact: '',\n      visiblemap: false,\n      mapurl: null\n    };\n\n    this.getSub = () => {\n      const datalcd = Amplify.PubSub.subscribe('lcd-message').subscribe({\n        next: data => {\n          var answer = JSON.stringify(data);\n          console.log('answer: ', answer);\n          var objectValue = JSON.parse(answer);\n          var messageiot = objectValue['value'].message;\n          console.log('tip: ', messageiot);\n          var presenceiot = objectValue['value'].presence;\n          console.log('status: ', presenceiot);\n          var mapdisplay = objectValue['value'].mapvue;\n          console.log('mapdisplay: ', mapdisplay);\n          var mapaddress = objectValue['value'].mapurl;\n          console.log('mapaddress: ', mapaddress);\n          this.setState({\n            datalcd: messageiot,\n            status: presenceiot,\n            visiblemap: mapdisplay,\n            mapurl: mapaddress\n          });\n        },\n        error: error => console.error(error),\n        close: () => console.log('Done')\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getSub();\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visiblemap: false\n    });\n  }\n\n  render() {\n    const {\n      datalcd,\n      status,\n      startbact,\n      visible\n    } = this.state;\n    const {\n      loading\n    } = this.state;\n    const welcome = 'How can I help?';\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: \"130vh\",\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"transcript\",\n      placeholder: \"Real Time transcribe stream\",\n      rows: \"1\",\n      readonly: \"readonly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"occamy-text-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, status === 0 ? React.createElement(OccamyText, {\n      maxFontSize: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(TextLoop, {\n      interval: \"4000\",\n      fade: \"true\",\n      children: [\"ASK ME\", React.createElement(\"img\", {\n        src: AWS_logo,\n        alt: \"Logo\",\n        height: \"150%\",\n        width: \"150%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }))) : null, status === 1 ? React.createElement(OccamyText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"My name is AVA.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), \"How can I help?\")) : null, status === \"request\" ? React.createElement(OccamyText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, datalcd)) : null)), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Open\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      visible: this.state.visiblemap,\n      width: \"1200\",\n      height: \"600\",\n      effect: \"fadeInUp\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(IframeComponent, {\n      src: \"https://maps.mapwize.io/#/f/p/mgmmap1/room104/t/p/mgmmap1/dining_hall?k=f0b3b38e6081057f&u=default_universe&l=en&z=16.937&modeId=5e70d546cdd99a0016bc0a37\",\n      height: \"600\",\n      width: \"1200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"javascript:void(0);\",\n      onClick: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: startbutton,\n      class: \"button-xl\",\n      title: \"Start Transcription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-microphone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), \" Start\"), React.createElement(\"button\", {\n      id: \"stop-button\",\n      class: \"button-xl\",\n      title: \"Stop Transcription\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-stop-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), \" Stop\"), React.createElement(\"button\", {\n      onClick: resetbutton,\n      class: \"button-xl button-secondary\",\n      title: \"Clear Transcript\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Clear Transcript\")), React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: pubSubsensoff,\n      class: \"button-xl\",\n      title: \"Sensor clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-microphone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), \" Sensor clear\"), React.createElement(\"button\", {\n      onClick: sensoron,\n      class: \"button-xl\",\n      title: \"Sensor prs detected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-stop-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), \" Sensor on\"), React.createElement(\"button\", {\n      onClick: messagesession,\n      class: \"button-xl button-secondary\",\n      title: \"Msg session\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Msg session\"), React.createElement(\"button\", {\n      onClick: messagemap,\n      class: \"button-xl button-secondary\",\n      title: \"Msg map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Msg map\"))), React.createElement(\"script\", {\n      src: \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"script\", {\n      src: \"dist/main.js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), this.data);\n  }\n\n}\n\nexport default LCD;","map":{"version":3,"sources":["/home/ec2-user/environment/myapp/src/App.js"],"names":["React","useEffect","useReducer","useState","API","graphqlOperation","Amplify","PubSub","Predictions","AWSIoTProvider","AmazonAIPredictionsProvider","TextLoop","cxs","Textfit","OccamyText","Modal","IframeComponent","Box","Grommet","mic","$","streamAudioToWebSocket","showError","startbutton","resetbutton","AWS_logo","WaveSpinner","awsconfig","configure","Auth","identityPoolId","process","env","REACT_APP_IDENTITY_POOL_ID","region","REACT_APP_REGION","userPoolId","REACT_APP_USER_POOL_ID","userPoolWebClientId","REACT_APP_USER_POOL_WEB_CLIENT_ID","predictions","convert","transcription","proxy","defaults","addPluggable","aws_pubsub_region","aws_pubsub_endpoint","REACT_APP_MQTT_ID","StyledTextLoop","display","pubSubsensoff","publish","message","presence","sensoron","messagesession","messagemap","mapvue","mapurl","SpeechToText","props","response","setResponse","AudioRecorder","recording","setRecording","micStream","setMicStream","audioBuffer","buffer","add","raw","concat","newBuffer","console","log","reset","addData","getData","startRecording","window","navigator","mediaDevices","getUserMedia","video","audio","then","stream","startMic","setStream","on","chunk","toRaw","audiobuf","stopRecording","finishRecording","stop","resultBuffer","convertFromBuffer","bytes","source","fullText","catch","err","JSON","stringify","LCD","Component","state","datalcd","status","startbact","visiblemap","getSub","subscribe","next","data","answer","objectValue","parse","messageiot","presenceiot","mapdisplay","mapaddress","setState","error","close","componentDidMount","openModal","visible","closeModal","render","loading","welcome","height","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,OAAOC,GAAP,IAAcC,gBAAd,QAAsC,kBAAtC;AACA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,WAA1B,QAA6C,aAA7C;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,2BAAT,QAA4C,0BAA5C;AAGA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,SAASC,GAAT,EAAaC,OAAb,QAA4B,SAA5B;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,sBAAP,MAAoC,eAApC;AACA,OAAOC,SAAP,MAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAGA,OAAOC,QAAP,MAAqB,+BAArB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAGA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAO,WAAP,C,CAEA;;AAEArB,OAAO,CAACsB,SAAR,CAAkB;AAChBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADxB;AAEJC,IAAAA,MAAM,EAAEH,OAAO,CAACC,GAAR,CAAYG,gBAFhB;AAGJC,IAAAA,UAAU,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHpB;AAIJC,IAAAA,mBAAmB,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJ7B,GADU;AAOhBC,EAAAA,WAAW,EAAE;AACPC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE;AACXR,QAAAA,MAAM,EAAE,WADG;AAEXS,QAAAA,KAAK,EAAE,KAFI;AAGXC,QAAAA,QAAQ,EAAE;AACN,sBAAY;AADN;AAHC;AADV;AADF;AAPG,CAAlB;AAoBAtC,OAAO,CAACuC,YAAR,CAAqB,IAAIpC,cAAJ,CAAmB;AACtCqC,EAAAA,iBAAiB,EAAEf,OAAO,CAACC,GAAR,CAAYG,gBADO;AAEtCY,EAAAA,mBAAmB,EAAG,SAAQhB,OAAO,CAACC,GAAR,CAAYgB,iBAAkB,QAAOjB,OAAO,CAACC,GAAR,CAAYG,gBAAiB;AAF1D,CAAnB,CAArB;AAKA7B,OAAO,CAACuC,YAAR,CAAqB,IAAInC,2BAAJ,EAArB;AAGA,MAAMuC,cAAc,GAAGrC,GAAG,CAACD,QAAD,CAAH,CAAc;AACnCuC,EAAAA,OAAO,EAAE;AAD0B,CAAd,CAAvB;;AAKA,IAAIC,aAAa,GAAG,YAAY;AAC5B,QAAM7C,OAAO,CAACC,MAAR,CAAe6C,OAAf,CAAuB,aAAvB,EAAsC;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAtC,CAAN;AACH,CAFD;;AAIA,IAAIC,QAAQ,GAAG,YAAY;AACvB,QAAMjD,OAAO,CAACC,MAAR,CAAe6C,OAAf,CAAuB,aAAvB,EAAsC;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAtC,CAAN;AACH,CAFD;;AAIA,IAAIE,cAAc,GAAG,YAAY;AAC7B,QAAMlD,OAAO,CAACC,MAAR,CAAe6C,OAAf,CAAuB,aAAvB,EAAsC;AAAEC,IAAAA,OAAO,EAAE,kHAAX;AAA+HC,IAAAA,QAAQ,EAAE;AAAzI,GAAtC,CAAN;AACH,CAFD;;AAIA,IAAIG,UAAU,GAAG,YAAY;AACzB,QAAMnD,OAAO,CAACC,MAAR,CAAe6C,OAAf,CAAuB,aAAvB,EAAsC;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE,CAAzB;AAA4BI,IAAAA,MAAM,EAAE,MAApC;AAA4CC,IAAAA,MAAM,EAAE;AAApD,GAAtC,CAAN;AACH,CAFD;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B5D,QAAQ,CAAC,gDAAD,CAAxC;;AAEA,WAAS6D,aAAT,CAAuBH,KAAvB,EAA8B;AAC5B,UAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4B/D,QAAQ,CAAC,KAAD,CAA1C;AACA,UAAM,CAACgE,SAAD,EAAYC,YAAZ,IAA4BjE,QAAQ,EAA1C;AACA,UAAM,CAACkE,WAAD,IAAgBlE,QAAQ,CAC3B,YAAW;AACV,UAAImE,MAAM,GAAG,EAAb;;AACA,eAASC,GAAT,CAAaC,GAAb,EAAkB;AAChBF,QAAAA,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAc,GAAGD,GAAjB,CAAT;AACA,eAAOF,MAAP;AACD;;AACD,eAASI,SAAT,GAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAN,QAAAA,MAAM,GAAG,EAAT;AACD;;AAED,aAAO;AACLO,QAAAA,KAAK,EAAE,YAAW;AAChBH,UAAAA,SAAS;AACV,SAHI;AAILI,QAAAA,OAAO,EAAE,UAASN,GAAT,EAAc;AACrB,iBAAOD,GAAG,CAACC,GAAD,CAAV;AACD,SANI;AAOLO,QAAAA,OAAO,EAAE,YAAW;AAClB,iBAAOT,MAAP;AACD;AATI,OAAP;AAWD,KAtBD,EAD4B,CAA9B;;AA0BA,mBAAeU,cAAf,GAAgC;AAC9BL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAP,MAAAA,WAAW,CAACQ,KAAZ;AAEAI,MAAAA,MAAM,CAACC,SAAP,CAAiBC,YAAjB,CAA8BC,YAA9B,CAA2C;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAA3C,EAA0EC,IAA1E,CAAgFC,MAAD,IAAY;AACzF,cAAMC,QAAQ,GAAG,IAAItE,GAAJ,EAAjB;AAEAsE,QAAAA,QAAQ,CAACC,SAAT,CAAmBF,MAAnB;AACAC,QAAAA,QAAQ,CAACE,EAAT,CAAY,MAAZ,EAAqBC,KAAD,IAAW;AAC7B,cAAIpB,GAAG,GAAGrD,GAAG,CAAC0E,KAAJ,CAAUD,KAAV,CAAV;;AACA,cAAIpB,GAAG,IAAI,IAAX,EAAiB;AACf;AACD;;AACD,cAAIsB,QAAQ,GAAGzB,WAAW,CAACS,OAAZ,CAAoBN,GAApB,CAAf;AAED,SAPD;AASAN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,YAAY,CAACqB,QAAD,CAAZ;AACD,OAfD;AAgBD;;AAED,mBAAeM,aAAf,GAA+B;AAC7BpB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,YAAM;AAAEoB,QAAAA;AAAF,UAAsBnC,KAA5B;AAEAM,MAAAA,SAAS,CAAC8B,IAAV;AACA7B,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEA,YAAMgC,YAAY,GAAG7B,WAAW,CAACU,OAAZ,EAArB;;AAEA,UAAI,OAAOiB,eAAP,KAA2B,UAA/B,EAA2C;AACzCA,QAAAA,eAAe,CAACE,YAAD,CAAf;AACD;AAEF;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjC,SAAS,IAAI;AAAQ,MAAA,OAAO,EAAE8B,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADhB,EAEG,CAAC9B,SAAD,IAAc;AAAQ,MAAA,OAAO,EAAEe,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFjB,CADF,CADF;AAQD;;AAED,WAASmB,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCrC,IAAAA,WAAW,CAAC,oBAAD,CAAX;AAEAvD,IAAAA,WAAW,CAACiC,OAAZ,CAAoB;AAClBC,MAAAA,aAAa,EAAE;AACb2D,QAAAA,MAAM,EAAE;AACND,UAAAA;AADM,SADK,CAIb;;AAJa;AADG,KAApB,EAOGb,IAPH,CAOQ,CAAC;AAAE7C,MAAAA,aAAa,EAAE;AAAE4D,QAAAA;AAAF;AAAjB,KAAD,KAAqC;AACzCvC,MAAAA,WAAW,CAACuC,QAAD,CAAX;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AACG,KAVP,EAWGC,KAXH,CAWSC,GAAG,IAAIzC,WAAW,CAAC0C,IAAI,CAACC,SAAL,CAAeF,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAD,CAX3B;AAYD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAEL,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIrC,QAAJ,CAFF,CADF,CADF;AAQD;;AAGD,MAAM6C,GAAN,SAAkB3G,KAAK,CAAC4G,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE,CAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,UAAU,EAAG,KAJP;AAKNtD,MAAAA,MAAM,EAAE;AALF,KADwB;;AAAA,SAa9BuD,MAb8B,GAarB,MAAM;AAChB,YAAMJ,OAAO,GAAGxG,OAAO,CAACC,MAAR,CAAe4G,SAAf,CAAyB,aAAzB,EAAwCA,SAAxC,CAAkD;AACnEC,QAAAA,IAAI,EAAEC,IAAI,IAAI;AACZ,cAAIC,MAAM,GAAGb,IAAI,CAACC,SAAL,CAAeW,IAAf,CAAb;AACA1C,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0C,MAAxB;AACA,cAAIC,WAAW,GAAGd,IAAI,CAACe,KAAL,CAAWF,MAAX,CAAlB;AACA,cAAIG,UAAU,GAAGF,WAAW,CAAC,OAAD,CAAX,CAAqBlE,OAAtC;AACAsB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6C,UAArB;AACA,cAAIC,WAAW,GAAGH,WAAW,CAAC,OAAD,CAAX,CAAqBjE,QAAvC;AACAqB,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB8C,WAAxB;AACA,cAAIC,UAAU,GAAGJ,WAAW,CAAC,OAAD,CAAX,CAAqB7D,MAAtC;AACAiB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B+C,UAA5B;AACA,cAAIC,UAAU,GAAGL,WAAW,CAAC,OAAD,CAAX,CAAqB5D,MAAtC;AACAgB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BgD,UAA5B;AACA,eAAKC,QAAL,CAAc;AAACf,YAAAA,OAAO,EAAEW,UAAV;AAAsBV,YAAAA,MAAM,EAAEW,WAA9B;AAA2CT,YAAAA,UAAU,EAAEU,UAAvD;AAAmEhE,YAAAA,MAAM,EAAEiE;AAA3E,WAAd;AACD,SAdkE;AAenEE,QAAAA,KAAK,EAAEA,KAAK,IAAInD,OAAO,CAACmD,KAAR,CAAcA,KAAd,CAfmD;AAgBnEC,QAAAA,KAAK,EAAE,MAAMpD,OAAO,CAACC,GAAR,CAAY,MAAZ;AAhBsD,OAAlD,CAAhB;AAkBA,KAhC+B;AAAA;;AAShCoD,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,MAAL;AAED;;AAsBCe,EAAAA,SAAS,GAAG;AACR,SAAKJ,QAAL,CAAc;AACVK,MAAAA,OAAO,EAAG;AADA,KAAd;AAGH;;AAEDC,EAAAA,UAAU,GAAG;AACT,SAAKN,QAAL,CAAc;AACVZ,MAAAA,UAAU,EAAG;AADH,KAAd;AAGH;;AAEHmB,EAAAA,MAAM,GAAE;AACN,UAAM;AAACtB,MAAAA,OAAD;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA,SAAlB;AAA6BkB,MAAAA;AAA7B,QAAwC,KAAKrB,KAAnD;AACE,UAAM;AAAEwB,MAAAA;AAAF,QAAc,KAAKxB,KAAzB;AACF,UAAMyB,OAAO,GAAG,iBAAhB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAoB,MAAA,KAAK,EAAI;AAACC,QAAAA,MAAM,EAAC,OAAR;AAAiBC,QAAAA,cAAc,EAAE;AAAjC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAU,MAAA,EAAE,EAAC,YAAb;AAA0B,MAAA,WAAW,EAAC,6BAAtC;AAAoE,MAAA,IAAI,EAAC,GAAzE;AACA,MAAA,QAAQ,EAAC,UADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAKS;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQzB,MAAM,KAAK,CAAZ,GAAiB,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,QAAQ,EAAE,CAAC,QAAD,EAAW;AAAK,QAAA,GAAG,EAAEtF,QAAV;AAAoB,QAAA,GAAG,EAAC,MAAxB;AAA+B,QAAA,MAAM,EAAC,MAAtC;AAA6C,QAAA,KAAK,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAA9B,CAAjB,GAAoM,IAD3M,EAEQsF,MAAM,KAAK,CAAZ,GAAiB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,oBAAZ,CAAjB,GACmB,IAH1B,EAIQA,MAAM,KAAK,SAAZ,GAAyB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAL,CAAZ,CAAzB,GAAsE,IAJ7E,CADD,CALT,EAcQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,OAAO,EAAE,MAAM,KAAKmB,SAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWI,UAA3B;AAAuC,MAAA,KAAK,EAAC,MAA7C;AAAoD,MAAA,MAAM,EAAC,KAA3D;AAAiE,MAAA,MAAM,EAAC,UAAxE;AAAmF,MAAA,WAAW,EAAE,MAAM,KAAKkB,UAAL,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,2JAArB;AAAiL,MAAA,MAAM,EAAC,KAAxL;AAA8L,MAAA,KAAK,EAAC,MAApM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAG,MAAA,IAAI,EAAC,qBAAR;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,CAHF,CAdR,EA0BE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE5G,WAAjB;AAA8B,MAAA,KAAK,EAAC,WAApC;AAAgD,MAAA,KAAK,EAAC,qBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,WADJ,EAII;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAC,WAA/B;AAA2C,MAAA,KAAK,EAAC,oBAAjD;AAAsE,MAAA,QAAQ,EAAC,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsF;AAC9E,MAAA,KAAK,EAAC,mBADwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtF,UAJJ,EAOI;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAA8B,MAAA,KAAK,EAAC,4BAApC;AAAiE,MAAA,KAAK,EAAC,kBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,CADJ,EAYgB;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAQ,MAAA,OAAO,EAAE2B,aAAjB;AAAgC,MAAA,KAAK,EAAC,WAAtC;AAAkD,MAAA,KAAK,EAAC,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,kBADQ,EAIR;AAAQ,MAAA,OAAO,EAAEI,QAAjB;AAA2B,MAAA,KAAK,EAAC,WAAjC;AAA6C,MAAA,KAAK,EAAC,qBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyE;AACjE,MAAA,KAAK,EAAC,mBAD2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzE,eAJQ,EAOR;AAAQ,MAAA,OAAO,EAAEC,cAAjB;AAAiC,MAAA,KAAK,EAAC,4BAAvC;AAAoE,MAAA,KAAK,EAAC,aAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPQ,EAUR;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAA6B,MAAA,KAAK,EAAC,4BAAnC;AAAgE,MAAA,KAAK,EAAC,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVQ,CAZhB,CA1BF,EAsDI;AAAQ,MAAA,GAAG,EAAC,mEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDJ,EAuDI;AAAQ,MAAA,GAAG,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDJ,EAyDE,KAAK4D,IAzDP,CADF;AA6DD;;AA/G+B;;AAmHlC,eAAeV,GAAf","sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\n\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Amplify, { PubSub, Predictions } from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\nimport { AmazonAIPredictionsProvider } from '@aws-amplify/predictions';\n\n\nimport TextLoop from \"react-text-loop\";\nimport cxs from \"cxs/component\";\n\nimport { Textfit } from 'react-textfit';\nimport OccamyText from 'react-occamy-text';\n\nimport Modal from 'react-awesome-modal';\nimport IframeComponent from './lib/IframeComponent';\n\nimport { Box,Grommet } from 'grommet';\n\nimport mic from 'microphone-stream';\nimport $ from 'jquery';\nimport streamAudioToWebSocket from  \"./lib/main.js\";\nimport showError from  \"./lib/main.js\";\nimport { startbutton } from \"./lib/main.js\";\nimport { resetbutton } from \"./lib/main.js\";\n\n\nimport AWS_logo from \"./images/AWS_logo_RGB_WHT.png\"\n\n// Spinner lib\nimport { WaveSpinner } from \"react-spinners-kit\";\n\n\nimport awsconfig from './aws-exports';\nimport './App.css';\n\n// IoT subscription\n\nAmplify.configure({\n  Auth: {\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID,\n  },\n  predictions: {\n        convert: {\n            transcription: {\n                region: \"us-east-1\",\n                proxy: false,\n                defaults: {\n                    \"language\": \"en-US\"\n                }\n            }\n        }\n    }\n});\n\nAmplify.addPluggable(new AWSIoTProvider({\n  aws_pubsub_region: process.env.REACT_APP_REGION,\n  aws_pubsub_endpoint: `wss://${process.env.REACT_APP_MQTT_ID}.iot.${process.env.REACT_APP_REGION}.amazonaws.com/mqtt`,\n}));\n\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\n\n\nconst StyledTextLoop = cxs(TextLoop)({\n  display: \"block\"\n});\n\n\nvar pubSubsensoff = async () => {\n    await Amplify.PubSub.publish('lcd-message', { message: '', presence: 0 });\n}\n\nvar sensoron = async () => {\n    await Amplify.PubSub.publish('lcd-message', { message: '', presence: 1 });\n}\n\nvar messagesession = async () => {\n    await Amplify.PubSub.publish('lcd-message', { message: 'The session ML305 - How to become the leader in your DeepRacer league is located at the Aria - Pledingo323 room ', presence: \"request\" });\n}\n\nvar messagemap = async () => {\n    await Amplify.PubSub.publish('lcd-message', { message: '', presence: 1, mapvue: 'true', mapurl: 'www.google.com' });\n}\n\nfunction SpeechToText(props) {\n  const [response, setResponse] = useState(\"Question from attendee will be displayed here.\")\n  \n  function AudioRecorder(props) {\n    const [recording, setRecording] = useState(false);\n    const [micStream, setMicStream] = useState();\n    const [audioBuffer] = useState(\n      (function() {\n        let buffer = [];\n        function add(raw) {\n          buffer = buffer.concat(...raw);\n          return buffer;\n        }\n        function newBuffer() {\n          console.log(\"reseting buffer\");\n          buffer = [];\n        }\n \n        return {\n          reset: function() {\n            newBuffer();\n          },\n          addData: function(raw) {\n            return add(raw);\n          },\n          getData: function() {\n            return buffer;\n          }\n        };\n      })()\n    );\n\n    async function startRecording() {\n      console.log('start recording');\n      audioBuffer.reset();\n\n      window.navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then((stream) => {\n        const startMic = new mic();\n\n        startMic.setStream(stream);\n        startMic.on('data', (chunk) => {\n          var raw = mic.toRaw(chunk);\n          if (raw == null) {\n            return;\n          }\n          var audiobuf = audioBuffer.addData(raw);\n\n        });\n        \n        setRecording(true);\n        setMicStream(startMic);\n      });\n    }\n\n    async function stopRecording() {\n      console.log('stop recording');\n      const { finishRecording } = props;\n\n      micStream.stop();\n      setMicStream(null);\n      setRecording(false);\n\n      const resultBuffer = audioBuffer.getData();\n\n      if (typeof finishRecording === \"function\") {\n        finishRecording(resultBuffer);\n      }\n\n    }\n\n    return (\n      <div className=\"audioRecorder\">\n        <div>\n          {recording && <button onClick={stopRecording}>Stop recording</button>}\n          {!recording && <button onClick={startRecording}>Start recording</button>}\n        </div>\n      </div>\n    );\n  }\n\n  function convertFromBuffer(bytes) {\n    setResponse('Converting text...');\n    \n    Predictions.convert({\n      transcription: {\n        source: {\n          bytes\n        },\n        // language: \"en-US\", // other options are \"en-GB\", \"fr-FR\", \"fr-CA\", \"es-US\"\n      },\n    }).then(({ transcription: { fullText } }) => {\n        setResponse(fullText);\n        console.log(fullText);\n          })\n      .catch(err => setResponse(JSON.stringify(err, null, 2)));\n  }\n\n  return (\n    <div className=\"Text\">\n      <div>\n        <AudioRecorder finishRecording={convertFromBuffer} />\n        <p>{response}</p>\n      </div>\n    </div>\n  );\n}\n\n\nclass LCD extends React.Component {\n  state = {\n    datalcd: null,\n    status: 0,\n    startbact: '',\n    visiblemap : false,\n    mapurl: null\n  }\n  \n  componentDidMount() {\n    this.getSub()\n    \n  }\n    getSub = () => {\n   const datalcd = Amplify.PubSub.subscribe('lcd-message').subscribe({\n  next: data => {\n    var answer = JSON.stringify(data);\n    console.log('answer: ', answer);\n    var objectValue = JSON.parse(answer);\n    var messageiot = objectValue['value'].message;\n    console.log('tip: ', messageiot);\n    var presenceiot = objectValue['value'].presence;\n    console.log('status: ', presenceiot);\n    var mapdisplay = objectValue['value'].mapvue;\n    console.log('mapdisplay: ', mapdisplay)\n    var mapaddress = objectValue['value'].mapurl;\n    console.log('mapaddress: ', mapaddress);\n    this.setState({datalcd: messageiot, status: presenceiot, visiblemap: mapdisplay, mapurl: mapaddress});\n  },\n  error: error => console.error(error),\n  close: () => console.log('Done'),\n});\n  }\n\n    openModal() {\n        this.setState({\n            visible : true\n        });\n    }\n \n    closeModal() {\n        this.setState({\n            visiblemap : false\n        });\n    }\n\n  render(){\n    const {datalcd, status, startbact, visible} = this.state;\n      const { loading } = this.state;\n    const welcome = 'How can I help?';\n    return (\n      <div className=\"App\"style = {{height:\"130vh\", justifyContent: 'center'}}>\n      <textarea id=\"transcript\" placeholder=\"Real Time transcribe stream\" rows=\"1\"\n      readonly=\"readonly\"></textarea>\n\n\n               <div className=\"occamy-text-example\">\n                <div className=\"box\">\n                      {(status === 0) ? <OccamyText maxFontSize='150'><h3><TextLoop interval='4000' fade='true' children={[\"ASK ME\", <img src={AWS_logo} alt=\"Logo\" height=\"150%\" width=\"150%\" />]} /></h3></OccamyText> : null}\n                      {(status === 1) ? <OccamyText><h3>My name is AVA.<br/>\n      How can I help?</h3></OccamyText> : null }\n                      {(status === \"request\") ? <OccamyText><h3>{datalcd}</h3></OccamyText>: null}\n                </div>\n              </div>\n                            \n              <section>\n                <h1></h1>\n                <input type=\"button\" value=\"Open\" onClick={() => this.openModal()} />\n                <Modal visible={this.state.visiblemap} width=\"1200\" height=\"600\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\n                    <div>\n                        <IframeComponent src=\"https://maps.mapwize.io/#/f/p/mgmmap1/room104/t/p/mgmmap1/dining_hall?k=f0b3b38e6081057f&u=default_universe&l=en&z=16.937&modeId=5e70d546cdd99a0016bc0a37\" height=\"600\" width=\"1200\"/>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal()}>Close</a>\n                    </div>\n                </Modal>\n            </section>\n          \n       {/* DEBUG SECTION*/}\n        <div class=\"row\">\n            <div class=\"col\">\n                <button onClick={startbutton} class=\"button-xl\" title=\"Start Transcription\">\n                    <i className=\"fa fa-microphone\"></i> Start\n                </button>\n                <button id=\"stop-button\" class=\"button-xl\" title=\"Stop Transcription\" disabled=\"true\"><i\n                        class=\"fa fa-stop-circle\"></i> Stop\n                </button>\n                <button onClick={resetbutton} class=\"button-xl button-secondary\" title=\"Clear Transcript\"> \n                    Clear Transcript\n                </button>\n            </div>\n                        <div class=\"col\">\n                <button onClick={pubSubsensoff} class=\"button-xl\" title=\"Sensor clear\">\n                    <i className=\"fa fa-microphone\"></i> Sensor clear\n                </button>\n                <button onClick={sensoron} class=\"button-xl\" title=\"Sensor prs detected\"><i\n                        class=\"fa fa-stop-circle\"></i> Sensor on\n                </button>\n                <button onClick={messagesession} class=\"button-xl button-secondary\" title=\"Msg session\"> \n                    Msg session\n                </button>\n                <button onClick={messagemap} class=\"button-xl button-secondary\" title=\"Msg map\"> \n                    Msg map\n                </button>\n\n            </div>\n        </div>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n          <script src=\"dist/main.js\"></script>\n\n       {this.data}\n      </div>\n    );\n  }\n}\n\n\nexport default LCD;\n\n\n"]},"metadata":{},"sourceType":"module"}